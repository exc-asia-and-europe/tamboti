<services>
<!--
	In this file the image services are defined. Using a prefix in vra:image/@href you can use different image services. Tamboti uses an 
	IIIF implementation (http://iiif.io/api/image/2.0/) for manipulating images. The IIIF-call is parsed and you can define [placeholders]
	and replace them with values generated by xquery. 
	
	<imageServiceProtocolDefinitions> stores the defined protocol-types.       	
 	<service> stores information about the server itself.
 	
 	i.e. if you have two different IIIF servers, you will use two different <service>-definitions:
	  <image-service name="some-iiif-server">
         <uri type="get" name="general" service-protocol="iiif">
            <replacements>
                <replace key="protocol">"http"</replace>
                <replace key="server">"server1.tld"</replace>
                <replace key="prefix">"/fcgi-bin/iipsrv.fcgi?IIIF=/path/to/image/"</replace>
                <replace key="id">
                    xmldb:encode-uri(substring-after($vra-image/@href/string(), "://"))
                </replace>
            </replacements>
        </uri>
      </image-service>
      
    and
    
	  <image-service name="some-other-iiif-server">
         <uri type="get" name="general" service-protocol="iiif">
            <replacements>
                <replace key="protocol">"http"</replace>
                <replace key="server">"server2.tld:8080"</replace>
                <replace key="prefix">"/fcgi-bin/iipsrv.fcgi?IIIF=/path/to/image/"</replace>
                <replace key="id">
                    xmldb:encode-uri(substring-after($vra-image/@href/string(), "://"))
                </replace>
            </replacements>
        </uri>
      </image-service>
    
    there are at the moment three fixed replacements:
	- [region] : cropping
	- [size] : resizing
	- [rotate] : rotation
	
	if your server is not capable of one of these, Tamboti uses im4xquery (https://github.com/exc-asia-and-europe/imagemagick.xq)
	functions for resizing. Be aware that the order of these conversion actions is defined in IIIF.
	
-->
    <imageServiceProtocolDefinitions>
        <serviceProtocol name="http">
            <call type="full-parameter">
                <url>[protocol]://[server]/[path]/[filename]</url>
                <replacements/>
            </call>
        </serviceProtocol>
        <serviceProtocol name="iipimage">
            <call type="full-parameter">
                <url>[protocol]://[server][prefix][id][size][region]&amp;CVT=jpg</url>
                <replacements>
                    <replace key="region">
                        xquery version "3.0";
                        let $region-parameters := $iiif-parameters/image-request-parameters/region
                        return
                            if($region-parameters/full/string() = "full") then
                                ""
                            else
                                xmldb:decode("&amp;amp;") || "RGN=" || $region-parameters/x/string() || "," || $region-parameters/y/string() || "," || $region-parameters/w/string() || "," || $region-parameters/h/string()
                    </replace>
                    <replace key="size">
                        xquery version "3.0";
                        let $size-parameters := $iiif-parameters/image-request-parameters/size
                        return
                            if($size-parameters/full/string() = "full") then
                                ""
                            else
                                concat(
                                    if(not($size-parameters/x/string() = "")) then
                                        xmldb:decode("&amp;amp;") || "WID=" || $size-parameters/x/string()
                                    else
                                        ""
                                    ,
                                    if(not($size-parameters/y/string() = "")) then
                                        xmldb:decode("&amp;amp;") || "HEI=" || $size-parameters/y/string()
                                    else
                                        ""
                                    )
                    </replace>
                </replacements>
            </call>
        </serviceProtocol>
        <serviceProtocol name="iiif">
            <call type="info">
                <url>[protocol]://[server][prefix]/[id]/info.json</url>
            </call>
            <call type="full-parameter">
                <url>[protocol]://[server][prefix]/[id]/[region]/[size]/[rotate]/default.jpg</url>
                <replacements>
                    <replace key="region">
                        xquery version "3.0";
                        let $region-parameters := $iiif-parameters/image-request-parameters/region
                        return
                            if($region-parameters/full/string() = "full") then
                                "full"
                            else
                                $region-parameters/x/string() || "," || $region-parameters/y/string() || "," || $region-parameters/w/string() || "," || $region-parameters/h/string()
                    </replace>
                    <replace key="size">
                        xquery version "3.0";
                        let $size-parameters := $iiif-parameters/image-request-parameters/size
                        return
                            if($size-parameters/full/string() = "full") then
                                "full"
                            else
                                "!" || $size-parameters/x/string() ||  "," || $size-parameters/y/string()
                    </replace>
                    <replace key="rotate">
                        xquery version "3.0";
                        let $rotation-parameters := $iiif-parameters/image-request-parameters/rotation
                        return
                            $rotation-parameters/degrees/string()
                    </replace>
                </replacements>
            </call>
        </serviceProtocol>
<!--
        <serviceProtocol name="digilib">
            <call type="full-parameter">
                <url>[protocol]://[server][prefix][id]</url>
            </call>
            <replacements>
            </replacements>
        </serviceProtocol>
-->
	    <!-- the default image service Protocol (without prefix in @href - for images stored in eXist) -->
        <serviceProtocol name="exist-internal">
            <call type="full-parameter">
                <url>[id]</url>
            </call>
            <replacements>
            </replacements>
        </serviceProtocol>
    </imageServiceProtocolDefinitions>
    <!-- the default image service (for images stored in eXist) -->
    <service>
        <image-service name="default">
            <uri type="get" name="general" service-protocol="exist-internal">
                <authentication/>
                <replacements>
                    <replace key="id">$vra-image/@id/string()</replace>
                </replacements>
            </uri>
        </image-service>
<!-- Example image service definitions -->
<!-- IIIF Server -->
<!--
        <image-service name="some-iiif-server">
            <uri type="get" name="general" service-protocol="iiif">
                <authentication/>
                <replacements>
                    <replace key="protocol">"http"</replace>
                    <replace key="server">"kjc-sv002.kjc.uni-heidelberg.de:6081"</replace>
                    <replace key="prefix">"/fcgi-bin/iipsrv.fcgi?IIIF=kjc-sv016/KMH_Grabungsplaene/"</replace>
                    <replace key="id">
                        xmldb:encode-uri(substring-after($vra-image/@href/string(), "://"))
                    </replace>
                </replacements>
            </uri>
        </image-service>
-->
<!-- Simple HTTP call (i.e. some webspace) -->
<!-- 
        <image-service name="some-webserver">
            <uri type="get" name="general" service-protocol="http">
                <authentication/>
                <replacements>
                    <replace key="protocol">"http"</replace>
                    <replace key="server">"www.somewhere.tld"</replace>
                    <replace key="path">"/path/to/images/"</replace>
                    <replace key="filename">
                        substring-after($vra-image/@href/string(), "://")
                    </replace>
                </replacements>
            </uri>
        </image-service>
 -->        
    </service>
</services>