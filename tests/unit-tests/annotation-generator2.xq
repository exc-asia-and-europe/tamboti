xquery version "3.1";

import module namespace config = "http://exist-db.org/mods/config" at "/apps/tamboti/modules/config.xqm";
import module namespace security = "http://exist-db.org/mods/security" at "/apps/tamboti/modules/search/security.xqm";

import module namespace hra-anno-framework = "http://hra.uni-heidelberg.de/ns/hra-anno-framework" at "/db/apps/tamboti/frameworks/hra-annotations/hra-annotations.xqm";
import module namespace functx="http://www.functx.com";

declare namespace xhtml="http://www.w3.org/1999/xhtml";
declare namespace schema="http://schema.org/";

(: $html generated by target definition in anno-config is passed :)

(:let $html := request:get-parameter("html", ()):)
let $html := 
<div class="target-container ui-widget ui-widget-content ui-corner-all ui-draggable ui-draggable-handle" data-configid="anno-config-1" data-annoidx="0" svg-document-id="uuid-d868196a-29dc-4be1-a956-ac0f950a4e05" svg-element-id="uuid-70d7e535-000e-4745-941b-c4034646b81a" svg-element-xpath="/svg[1]/rect[3]"><div target-id="target_1" class="target-label" xmlns="http://www.w3.org/1999/xhtml">Transkription<span class="ui-icon ui-icon-trash anno-delete"></span><span class="ui-icon ui-icon-notice anno-updated"></span></div><div class="target-short" xmlns="http://www.w3.org/1999/xhtml"><div style="border-bottom:1px dashed black"><div><span style="text-decoration: underline">Tamboti-Resource:</span></div><div><span><a href="/exist/apps/tamboti/modules/search/index.html?search-field=ID&amp;value=w_46dc239b-a445-5ce8-9864-174f62f459ba" target="_blank">w_46dc239b-a445-5ce8-9864-174f62f459ba</a></span></div></div><div style="font-weight:bold">77</div></div><div class="target-detail" xmlns="http://www.w3.org/1999/xhtml" style="display: none;"><div><div>77</div><!--<img src="http://mirrors.creativecommons.org/presskit/icons/cc.large.png" width="150"/>--></div></div><div class="target-iri">http://localhost:8080/exist/apps/tamboti/api/resource/w_46dc239b-a445-5ce8-9864-174f62f459ba?/vra%3Avra/vra%3Awork/vra%3AinscriptionSet/vra%3Ainscription%5B1%5D</div><div class="target-footer" xmlns="http://www.w3.org/1999/xhtml" style="display: none;"></div></div>

                        
let $html := root($html)

let $tamboti-uri := request:get-scheme() || "://" || request:get-server-name() || ":" || request:get-server-port() || $config:app-http-root

let $anno-uuid := 
    if ($html/div/@anno-id/string()) then
        $html/div/@anno-id/string()
    else
        "anno-" || util:uuid()
        
let $svg-uuid := $html/div/@svg-document-id/string()
let $svg-selector := substring-after($svg-uuid, "?")

let $svg-selector := $html/div/@svg-element-xpath/string()
let $svg-element-xpath := encode-for-uri($svg-selector)
let $anno-iri := $tamboti-uri || "/api/annotation/" || $anno-uuid
let $target-iri := $tamboti-uri || "/api/resource/" || $svg-uuid || "?" || $svg-element-xpath

let $target-resource := $tamboti-uri || "/api/resource/" || $svg-uuid

let $body-iri := xmldb:decode($html/div/div[@class="target-iri"]/string())
let $body-selector := substring-after($body-iri, "?")
let $body-resource-uuid := functx:substring-after-last(substring-before($body-iri, "?"), "/")

let $body-resource := $tamboti-uri || "/api/resource/" || $body-resource-uuid
let $config-target-id := $html/div/xhtml:div[@class="target-label"]/@target-id/string()

let $apps-uri := substring-before($tamboti-uri, "/tamboti")
let $creation-date := datetime:timestamp-to-datetime(datetime:timestamp())
let $user-id := security:get-user-credential-from-session()[1]
let $user-name := sm:get-account-metadata($user-id, xs:anyURI("http://axschema.org/namePerson"))

let $json-map :=
    map{
    		"@context": "http://www.w3.org/ns/anno.jsonld",
    		"id": $anno-iri,
    		"type": "Annotation",
    		"motivation": "describing",
    		"creator": map{
    			"id": $tamboti-uri || "/api/user/" || encode-for-uri($user-id),
    			"type": "Person",
    			"name": $user-name
    		},
    		"created": $creation-date,
    		"generator": map{
    			"id": $apps-uri || "/canvas-editor",
    			"type": "softwareAgent"
    		},
    		"generated": $creation-date,
    		"body": map{
    			"source": $body-resource,
    			"format": "text/xml",
    			"selector": map{
    				"type": "XPathSelector",
    				"value": $body-selector
    			}
    		},
    		"target": map{
    			"source": $target-resource,
    			"format": "text/xml",
    			"selector": map{
    				"type": "XPathSelector",
    				"value": $svg-selector
    		    },
    			"renderedVia": map{
    				"id": $tamboti-uri,
    				"type": "Software",
    				"schema:softwareVersion": $config:app-version,
    				"schema:urlTemplate": $tamboti-uri || "/api/anno-configs/" || $html/div/@data-configid/string() || "#" || $config-target-id
    			}		    
    		}
    	}

let $header := response:set-header("Media-Type", "text/javascript")
let $header := response:set-header("Content-Type", "application/json")
let $header := response:set-header("Content-Disposition", "inline; filename=""info.json""")
    	
return
    serialize($json-map, $hra-anno-framework:json-serialize-parameters)
